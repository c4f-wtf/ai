{"id":"node_modules/workbox-routing/Route.mjs","dependencies":[{"name":"/home/menzi/www/c4f.wtf/ai/package.json","includedInParent":true,"mtime":1574075114495},{"name":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/package.json","includedInParent":true,"mtime":1571051478133},{"name":"workbox-core/_private/assert.mjs","loc":{"line":9,"column":21},"parent":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/Route.mjs","resolved":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-core/_private/assert.mjs"},{"name":"./utils/constants.mjs","loc":{"line":11,"column":42},"parent":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/Route.mjs","resolved":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/utils/constants.mjs"},{"name":"./utils/normalizeHandler.mjs","loc":{"line":12,"column":31},"parent":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/Route.mjs","resolved":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/utils/normalizeHandler.mjs"},{"name":"./_version.mjs","loc":{"line":13,"column":7},"parent":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/Route.mjs","resolved":"/home/menzi/www/c4f.wtf/ai/node_modules/workbox-routing/_version.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Route = void 0;\n\nvar _assert = require(\"workbox-core/_private/assert.mjs\");\n\nvar _constants = require(\"./utils/constants.mjs\");\n\nvar _normalizeHandler = require(\"./utils/normalizeHandler.mjs\");\n\nrequire(\"./_version.mjs\");\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox.routing\n */\nclass Route {\n  /**\n   * Constructor for Route class.\n   *\n   * @param {workbox.routing.Route~matchCallback} match\n   * A callback function that determines whether the route matches a given\n   * `fetch` event by returning a non-falsy value.\n   * @param {workbox.routing.Route~handlerCallback} handler A callback\n   * function that returns a Promise resolving to a Response.\n   * @param {string} [method='GET'] The HTTP method to match the Route\n   * against.\n   */\n  constructor(match, handler, method) {\n    if (\"development\" !== 'production') {\n      _assert.assert.isType(match, 'function', {\n        moduleName: 'workbox-routing',\n        className: 'Route',\n        funcName: 'constructor',\n        paramName: 'match'\n      });\n\n      if (method) {\n        _assert.assert.isOneOf(method, _constants.validMethods, {\n          paramName: 'method'\n        });\n      }\n    } // These values are referenced directly by Router so cannot be\n    // altered by minifification.\n\n\n    this.handler = (0, _normalizeHandler.normalizeHandler)(handler);\n    this.match = match;\n    this.method = method || _constants.defaultMethod;\n  }\n\n}\n\nexports.Route = Route;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":12,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":13,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":1,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":15,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":24,"column":0}},{"name":"Route","generated":{"line":33,"column":6},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":24,"column":6}},{"generated":{"line":33,"column":11},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":24,"column":0}},{"generated":{"line":33,"column":12},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":24,"column":12}},{"generated":{"line":34,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":25,"column":2}},{"name":"constructor","generated":{"line":45,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":2}},{"name":"constructor","generated":{"line":45,"column":2},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":2}},{"generated":{"line":45,"column":13},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":13}},{"name":"match","generated":{"line":45,"column":14},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":14}},{"generated":{"line":45,"column":19},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":13}},{"name":"handler","generated":{"line":45,"column":21},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":21}},{"generated":{"line":45,"column":28},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":13}},{"name":"method","generated":{"line":45,"column":30},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":30}},{"generated":{"line":45,"column":36},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":13}},{"generated":{"line":45,"column":38},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":38}},{"generated":{"line":46,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":37,"column":4}},{"generated":{"line":46,"column":8},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":37,"column":8}},{"generated":{"line":46,"column":26},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":37,"column":33}},{"generated":{"line":46,"column":38},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":37,"column":4}},{"generated":{"line":46,"column":40},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":37,"column":47}},{"name":"assert","generated":{"line":47,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":6}},{"name":"isType","generated":{"line":47,"column":21},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":13}},{"generated":{"line":47,"column":27},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":6}},{"name":"match","generated":{"line":47,"column":28},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":20}},{"generated":{"line":47,"column":33},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":6}},{"generated":{"line":47,"column":35},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":27}},{"generated":{"line":47,"column":45},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":6}},{"generated":{"line":47,"column":47},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":39}},{"name":"moduleName","generated":{"line":48,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":39,"column":8}},{"name":"moduleName","generated":{"line":48,"column":8},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":39,"column":8}},{"generated":{"line":48,"column":18},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":39,"column":18}},{"generated":{"line":48,"column":20},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":39,"column":20}},{"generated":{"line":48,"column":37},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":39}},{"name":"className","generated":{"line":49,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":40,"column":8}},{"name":"className","generated":{"line":49,"column":8},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":40,"column":8}},{"generated":{"line":49,"column":17},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":40,"column":17}},{"generated":{"line":49,"column":19},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":40,"column":19}},{"generated":{"line":49,"column":26},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":39}},{"name":"funcName","generated":{"line":50,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":41,"column":8}},{"name":"funcName","generated":{"line":50,"column":8},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":41,"column":8}},{"generated":{"line":50,"column":16},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":41,"column":16}},{"generated":{"line":50,"column":18},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":41,"column":18}},{"generated":{"line":50,"column":31},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":39}},{"name":"paramName","generated":{"line":51,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":42,"column":8}},{"name":"paramName","generated":{"line":51,"column":8},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":42,"column":8}},{"generated":{"line":51,"column":17},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":42,"column":17}},{"generated":{"line":51,"column":19},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":42,"column":19}},{"generated":{"line":52,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":39}},{"generated":{"line":52,"column":7},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":38,"column":6}},{"generated":{"line":54,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":45,"column":6}},{"name":"method","generated":{"line":54,"column":10},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":45,"column":10}},{"generated":{"line":54,"column":16},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":45,"column":6}},{"generated":{"line":54,"column":18},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":45,"column":18}},{"name":"assert","generated":{"line":55,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":8}},{"name":"isOneOf","generated":{"line":55,"column":23},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":15}},{"generated":{"line":55,"column":30},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":8}},{"name":"method","generated":{"line":55,"column":31},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":23}},{"generated":{"line":55,"column":37},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":8}},{"name":"validMethods","generated":{"line":55,"column":39},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":31}},{"generated":{"line":55,"column":62},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":8}},{"generated":{"line":55,"column":64},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":45}},{"name":"paramName","generated":{"line":56,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":46}},{"name":"paramName","generated":{"line":56,"column":10},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":46}},{"generated":{"line":56,"column":19},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":55}},{"generated":{"line":56,"column":21},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":57}},{"generated":{"line":57,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":45}},{"generated":{"line":57,"column":9},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":46,"column":8}},{"generated":{"line":58,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":47,"column":7}},{"generated":{"line":59,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":48,"column":5}},{"generated":{"line":59,"column":5},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":36,"column":38}},{"generated":{"line":59,"column":6},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":50,"column":4}},{"generated":{"line":60,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":51,"column":4}},{"generated":{"line":63,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":4}},{"name":"handler","generated":{"line":63,"column":9},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":9}},{"generated":{"line":63,"column":16},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":4}},{"generated":{"line":63,"column":19},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":19}},{"name":"handler","generated":{"line":63,"column":59},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":36}},{"generated":{"line":63,"column":66},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":19}},{"generated":{"line":63,"column":67},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":52,"column":4}},{"generated":{"line":64,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":53,"column":4}},{"name":"match","generated":{"line":64,"column":9},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":53,"column":9}},{"generated":{"line":64,"column":14},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":53,"column":4}},{"name":"match","generated":{"line":64,"column":17},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":53,"column":17}},{"generated":{"line":64,"column":22},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":53,"column":4}},{"generated":{"line":65,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":4}},{"name":"method","generated":{"line":65,"column":9},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":9}},{"generated":{"line":65,"column":15},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":4}},{"name":"method","generated":{"line":65,"column":18},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":18}},{"generated":{"line":65,"column":24},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":24}},{"name":"defaultMethod","generated":{"line":65,"column":28},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":28}},{"generated":{"line":65,"column":52},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":54,"column":4}},{"generated":{"line":66,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":55,"column":3}},{"generated":{"line":68,"column":0},"source":"node_modules/workbox-routing/Route.mjs","original":{"line":24,"column":12}}],"sources":{"node_modules/workbox-routing/Route.mjs":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {assert} from 'workbox-core/_private/assert.mjs';\n\nimport {defaultMethod, validMethods} from './utils/constants.mjs';\nimport {normalizeHandler} from './utils/normalizeHandler.mjs';\nimport './_version.mjs';\n\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox.routing\n */\nclass Route {\n  /**\n   * Constructor for Route class.\n   *\n   * @param {workbox.routing.Route~matchCallback} match\n   * A callback function that determines whether the route matches a given\n   * `fetch` event by returning a non-falsy value.\n   * @param {workbox.routing.Route~handlerCallback} handler A callback\n   * function that returns a Promise resolving to a Response.\n   * @param {string} [method='GET'] The HTTP method to match the Route\n   * against.\n   */\n  constructor(match, handler, method) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isType(match, 'function', {\n        moduleName: 'workbox-routing',\n        className: 'Route',\n        funcName: 'constructor',\n        paramName: 'match',\n      });\n\n      if (method) {\n        assert.isOneOf(method, validMethods, {paramName: 'method'});\n      }\n    }\n\n    // These values are referenced directly by Router so cannot be\n    // altered by minifification.\n    this.handler = normalizeHandler(handler);\n    this.match = match;\n    this.method = method || defaultMethod;\n  }\n}\n\nexport {Route};\n"},"lineCount":null}},"error":null,"hash":"9517efd518529a9dfb18178afa677489","cacheData":{"env":{"NODE_ENV":"development"}}}