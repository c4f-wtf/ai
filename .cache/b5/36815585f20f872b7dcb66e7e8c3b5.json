{"id":"node_modules/ace-builds/src-noconflict/mode-prolog.js","dependencies":[{"name":"/home/menzi/www/c4f.wtf/ai/package.json","includedInParent":true,"mtime":1574075114495},{"name":"/home/menzi/www/c4f.wtf/ai/node_modules/ace-builds/package.json","includedInParent":true,"mtime":1570787340576}],"generated":{"js":"ace.define(\"ace/mode/prolog_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PrologHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { include: '#comment' },\n         { include: '#basic_fact' },\n         { include: '#rule' },\n         { include: '#directive' },\n         { include: '#fact' } ],\n      '#atom': \n       [ { token: 'constant.other.atom.prolog',\n           regex: '\\\\b[a-z][a-zA-Z0-9_]*\\\\b' },\n         { token: 'constant.numeric.prolog',\n           regex: '-?\\\\d+(?:\\\\.\\\\d+)?' },\n         { include: '#string' } ],\n      '#basic_elem': \n       [ { include: '#comment' },\n         { include: '#statement' },\n         { include: '#constants' },\n         { include: '#operators' },\n         { include: '#builtins' },\n         { include: '#list' },\n         { include: '#atom' },\n         { include: '#variable' } ],\n      '#basic_fact': \n       [ { token: \n            [ 'entity.name.function.fact.basic.prolog',\n              'punctuation.end.fact.basic.prolog' ],\n           regex: '([a-z]\\\\w*)(\\\\.)' } ],\n      '#builtins': \n       [ { token: 'support.function.builtin.prolog',\n           regex: '\\\\b(?:abolish|abort|ancestors|arg|ascii|assert[az]|atom(?:ic)?|body|char|close|conc|concat|consult|define|definition|dynamic|dump|fail|file|free|free_proc|functor|getc|goal|halt|head|head|integer|length|listing|match_args|member|next_clause|nl|nonvar|nth|number|cvars|nvars|offset|op|print?|prompt|putc|quoted|ratom|read|redefine|rename|retract(?:all)?|see|seeing|seen|skip|spy|statistics|system|tab|tell|telling|term|time|told|univ|unlink_clause|unspy_predicate|var|write)\\\\b' } ],\n      '#comment': \n       [ { token: \n            [ 'punctuation.definition.comment.prolog',\n              'comment.line.percentage.prolog' ],\n           regex: '(%)(.*$)' },\n         { token: 'punctuation.definition.comment.prolog',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.prolog',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.prolog' } ] } ],\n      '#constants': \n       [ { token: 'constant.language.prolog',\n           regex: '\\\\b(?:true|false|yes|no)\\\\b' } ],\n      '#directive': \n       [ { token: 'keyword.operator.directive.prolog',\n           regex: ':-',\n           push: \n            [ { token: 'meta.directive.prolog', regex: '\\\\.', next: 'pop' },\n              { include: '#comment' },\n              { include: '#statement' },\n              { defaultToken: 'meta.directive.prolog' } ] } ],\n      '#expr': \n       [ { include: '#comments' },\n         { token: 'meta.expression.prolog',\n           regex: '\\\\(',\n           push: \n            [ { token: 'meta.expression.prolog', regex: '\\\\)', next: 'pop' },\n              { include: '#expr' },\n              { defaultToken: 'meta.expression.prolog' } ] },\n         { token: 'keyword.control.cutoff.prolog', regex: '!' },\n         { token: 'punctuation.control.and.prolog', regex: ',' },\n         { token: 'punctuation.control.or.prolog', regex: ';' },\n         { include: '#basic_elem' } ],\n      '#fact': \n       [ { token: \n            [ 'entity.name.function.fact.prolog',\n              'punctuation.begin.fact.parameters.prolog' ],\n           regex: '([a-z]\\\\w*)(\\\\()(?!.*:-)',\n           push: \n            [ { token: \n                 [ 'punctuation.end.fact.parameters.prolog',\n                   'punctuation.end.fact.prolog' ],\n                regex: '(\\\\))(\\\\.?)',\n                next: 'pop' },\n              { include: '#parameter' },\n              { defaultToken: 'meta.fact.prolog' } ] } ],\n      '#list': \n       [ { token: 'punctuation.begin.list.prolog',\n           regex: '\\\\[(?=.*\\\\])',\n           push: \n            [ { token: 'punctuation.end.list.prolog',\n                regex: '\\\\]',\n                next: 'pop' },\n              { include: '#comment' },\n              { token: 'punctuation.separator.list.prolog', regex: ',' },\n              { token: 'punctuation.concat.list.prolog',\n                regex: '\\\\|',\n                push: \n                 [ { token: 'meta.list.concat.prolog',\n                     regex: '(?=\\\\s*\\\\])',\n                     next: 'pop' },\n                   { include: '#basic_elem' },\n                   { defaultToken: 'meta.list.concat.prolog' } ] },\n              { include: '#basic_elem' },\n              { defaultToken: 'meta.list.prolog' } ] } ],\n      '#operators': \n       [ { token: 'keyword.operator.prolog',\n           regex: '\\\\\\\\\\\\+|\\\\bnot\\\\b|\\\\bis\\\\b|->|[><]|[><\\\\\\\\:=]?=|(?:=\\\\\\\\|\\\\\\\\=)=' } ],\n      '#parameter': \n       [ { token: 'variable.language.anonymous.prolog',\n           regex: '\\\\b_\\\\b' },\n         { token: 'variable.parameter.prolog',\n           regex: '\\\\b[A-Z_]\\\\w*\\\\b' },\n         { token: 'punctuation.separator.parameters.prolog', regex: ',' },\n         { include: '#basic_elem' },\n         { token: 'text', regex: '[^\\\\s]' } ],\n      '#rule': \n       [ { token: 'meta.rule.prolog',\n           regex: '(?=[a-z]\\\\w*.*:-)',\n           push: \n            [ { token: 'punctuation.rule.end.prolog',\n                regex: '\\\\.',\n                next: 'pop' },\n              { token: 'meta.rule.signature.prolog',\n                regex: '(?=[a-z]\\\\w*.*:-)',\n                push: \n                 [ { token: 'meta.rule.signature.prolog',\n                     regex: '(?=:-)',\n                     next: 'pop' },\n                   { token: 'entity.name.function.rule.prolog',\n                     regex: '[a-z]\\\\w*(?=\\\\(|\\\\s*:-)' },\n                   { token: 'punctuation.rule.parameters.begin.prolog',\n                     regex: '\\\\(',\n                     push: \n                      [ { token: 'punctuation.rule.parameters.end.prolog',\n                          regex: '\\\\)',\n                          next: 'pop' },\n                        { include: '#parameter' },\n                        { defaultToken: 'meta.rule.parameters.prolog' } ] },\n                   { defaultToken: 'meta.rule.signature.prolog' } ] },\n              { token: 'keyword.operator.definition.prolog',\n                regex: ':-',\n                push: \n                 [ { token: 'meta.rule.definition.prolog',\n                     regex: '(?=\\\\.)',\n                     next: 'pop' },\n                   { include: '#comment' },\n                   { include: '#expr' },\n                   { defaultToken: 'meta.rule.definition.prolog' } ] },\n              { defaultToken: 'meta.rule.prolog' } ] } ],\n      '#statement': \n       [ { token: 'meta.statement.prolog',\n           regex: '(?=[a-z]\\\\w*\\\\()',\n           push: \n            [ { token: 'punctuation.end.statement.parameters.prolog',\n                regex: '\\\\)',\n                next: 'pop' },\n              { include: '#builtins' },\n              { include: '#atom' },\n              { token: 'punctuation.begin.statement.parameters.prolog',\n                regex: '\\\\(',\n                push: \n                 [ { token: 'meta.statement.parameters.prolog',\n                     regex: '(?=\\\\))',\n                     next: 'pop' },\n                   { token: 'punctuation.separator.statement.prolog', regex: ',' },\n                   { include: '#basic_elem' },\n                   { defaultToken: 'meta.statement.parameters.prolog' } ] },\n              { defaultToken: 'meta.statement.prolog' } ] } ],\n      '#string': \n       [ { token: 'punctuation.definition.string.begin.prolog',\n           regex: '\\'',\n           push: \n            [ { token: 'punctuation.definition.string.end.prolog',\n                regex: '\\'',\n                next: 'pop' },\n              { token: 'constant.character.escape.prolog', regex: '\\\\\\\\.' },\n              { token: 'constant.character.escape.quote.prolog',\n                regex: '\\'\\'' },\n              { defaultToken: 'string.quoted.single.prolog' } ] } ],\n      '#variable': \n       [ { token: 'variable.language.anonymous.prolog',\n           regex: '\\\\b_\\\\b' },\n         { token: 'variable.other.prolog',\n           regex: '\\\\b[A-Z_][a-zA-Z0-9_]*\\\\b' } ] };\n    \n    this.normalizeRules();\n};\n\nPrologHighlightRules.metaData = { fileTypes: [ 'plg', 'prolog' ],\n      foldingStartMarker: '(%\\\\s*region \\\\w*)|([a-z]\\\\w*.*:- ?)',\n      foldingStopMarker: '(%\\\\s*end(\\\\s*region)?)|(?=\\\\.)',\n      keyEquivalent: '^~P',\n      name: 'Prolog',\n      scopeName: 'source.prolog' };\n\n\noop.inherits(PrologHighlightRules, TextHighlightRules);\n\nexports.PrologHighlightRules = PrologHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/prolog\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prolog_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PrologHighlightRules = require(\"./prolog_highlight_rules\").PrologHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PrologHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"%\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/prolog\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/prolog\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ace-builds/src-noconflict/mode-prolog.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}}],"sources":{"node_modules/ace-builds/src-noconflict/mode-prolog.js":"ace.define(\"ace/mode/prolog_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PrologHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { include: '#comment' },\n         { include: '#basic_fact' },\n         { include: '#rule' },\n         { include: '#directive' },\n         { include: '#fact' } ],\n      '#atom': \n       [ { token: 'constant.other.atom.prolog',\n           regex: '\\\\b[a-z][a-zA-Z0-9_]*\\\\b' },\n         { token: 'constant.numeric.prolog',\n           regex: '-?\\\\d+(?:\\\\.\\\\d+)?' },\n         { include: '#string' } ],\n      '#basic_elem': \n       [ { include: '#comment' },\n         { include: '#statement' },\n         { include: '#constants' },\n         { include: '#operators' },\n         { include: '#builtins' },\n         { include: '#list' },\n         { include: '#atom' },\n         { include: '#variable' } ],\n      '#basic_fact': \n       [ { token: \n            [ 'entity.name.function.fact.basic.prolog',\n              'punctuation.end.fact.basic.prolog' ],\n           regex: '([a-z]\\\\w*)(\\\\.)' } ],\n      '#builtins': \n       [ { token: 'support.function.builtin.prolog',\n           regex: '\\\\b(?:abolish|abort|ancestors|arg|ascii|assert[az]|atom(?:ic)?|body|char|close|conc|concat|consult|define|definition|dynamic|dump|fail|file|free|free_proc|functor|getc|goal|halt|head|head|integer|length|listing|match_args|member|next_clause|nl|nonvar|nth|number|cvars|nvars|offset|op|print?|prompt|putc|quoted|ratom|read|redefine|rename|retract(?:all)?|see|seeing|seen|skip|spy|statistics|system|tab|tell|telling|term|time|told|univ|unlink_clause|unspy_predicate|var|write)\\\\b' } ],\n      '#comment': \n       [ { token: \n            [ 'punctuation.definition.comment.prolog',\n              'comment.line.percentage.prolog' ],\n           regex: '(%)(.*$)' },\n         { token: 'punctuation.definition.comment.prolog',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.prolog',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.prolog' } ] } ],\n      '#constants': \n       [ { token: 'constant.language.prolog',\n           regex: '\\\\b(?:true|false|yes|no)\\\\b' } ],\n      '#directive': \n       [ { token: 'keyword.operator.directive.prolog',\n           regex: ':-',\n           push: \n            [ { token: 'meta.directive.prolog', regex: '\\\\.', next: 'pop' },\n              { include: '#comment' },\n              { include: '#statement' },\n              { defaultToken: 'meta.directive.prolog' } ] } ],\n      '#expr': \n       [ { include: '#comments' },\n         { token: 'meta.expression.prolog',\n           regex: '\\\\(',\n           push: \n            [ { token: 'meta.expression.prolog', regex: '\\\\)', next: 'pop' },\n              { include: '#expr' },\n              { defaultToken: 'meta.expression.prolog' } ] },\n         { token: 'keyword.control.cutoff.prolog', regex: '!' },\n         { token: 'punctuation.control.and.prolog', regex: ',' },\n         { token: 'punctuation.control.or.prolog', regex: ';' },\n         { include: '#basic_elem' } ],\n      '#fact': \n       [ { token: \n            [ 'entity.name.function.fact.prolog',\n              'punctuation.begin.fact.parameters.prolog' ],\n           regex: '([a-z]\\\\w*)(\\\\()(?!.*:-)',\n           push: \n            [ { token: \n                 [ 'punctuation.end.fact.parameters.prolog',\n                   'punctuation.end.fact.prolog' ],\n                regex: '(\\\\))(\\\\.?)',\n                next: 'pop' },\n              { include: '#parameter' },\n              { defaultToken: 'meta.fact.prolog' } ] } ],\n      '#list': \n       [ { token: 'punctuation.begin.list.prolog',\n           regex: '\\\\[(?=.*\\\\])',\n           push: \n            [ { token: 'punctuation.end.list.prolog',\n                regex: '\\\\]',\n                next: 'pop' },\n              { include: '#comment' },\n              { token: 'punctuation.separator.list.prolog', regex: ',' },\n              { token: 'punctuation.concat.list.prolog',\n                regex: '\\\\|',\n                push: \n                 [ { token: 'meta.list.concat.prolog',\n                     regex: '(?=\\\\s*\\\\])',\n                     next: 'pop' },\n                   { include: '#basic_elem' },\n                   { defaultToken: 'meta.list.concat.prolog' } ] },\n              { include: '#basic_elem' },\n              { defaultToken: 'meta.list.prolog' } ] } ],\n      '#operators': \n       [ { token: 'keyword.operator.prolog',\n           regex: '\\\\\\\\\\\\+|\\\\bnot\\\\b|\\\\bis\\\\b|->|[><]|[><\\\\\\\\:=]?=|(?:=\\\\\\\\|\\\\\\\\=)=' } ],\n      '#parameter': \n       [ { token: 'variable.language.anonymous.prolog',\n           regex: '\\\\b_\\\\b' },\n         { token: 'variable.parameter.prolog',\n           regex: '\\\\b[A-Z_]\\\\w*\\\\b' },\n         { token: 'punctuation.separator.parameters.prolog', regex: ',' },\n         { include: '#basic_elem' },\n         { token: 'text', regex: '[^\\\\s]' } ],\n      '#rule': \n       [ { token: 'meta.rule.prolog',\n           regex: '(?=[a-z]\\\\w*.*:-)',\n           push: \n            [ { token: 'punctuation.rule.end.prolog',\n                regex: '\\\\.',\n                next: 'pop' },\n              { token: 'meta.rule.signature.prolog',\n                regex: '(?=[a-z]\\\\w*.*:-)',\n                push: \n                 [ { token: 'meta.rule.signature.prolog',\n                     regex: '(?=:-)',\n                     next: 'pop' },\n                   { token: 'entity.name.function.rule.prolog',\n                     regex: '[a-z]\\\\w*(?=\\\\(|\\\\s*:-)' },\n                   { token: 'punctuation.rule.parameters.begin.prolog',\n                     regex: '\\\\(',\n                     push: \n                      [ { token: 'punctuation.rule.parameters.end.prolog',\n                          regex: '\\\\)',\n                          next: 'pop' },\n                        { include: '#parameter' },\n                        { defaultToken: 'meta.rule.parameters.prolog' } ] },\n                   { defaultToken: 'meta.rule.signature.prolog' } ] },\n              { token: 'keyword.operator.definition.prolog',\n                regex: ':-',\n                push: \n                 [ { token: 'meta.rule.definition.prolog',\n                     regex: '(?=\\\\.)',\n                     next: 'pop' },\n                   { include: '#comment' },\n                   { include: '#expr' },\n                   { defaultToken: 'meta.rule.definition.prolog' } ] },\n              { defaultToken: 'meta.rule.prolog' } ] } ],\n      '#statement': \n       [ { token: 'meta.statement.prolog',\n           regex: '(?=[a-z]\\\\w*\\\\()',\n           push: \n            [ { token: 'punctuation.end.statement.parameters.prolog',\n                regex: '\\\\)',\n                next: 'pop' },\n              { include: '#builtins' },\n              { include: '#atom' },\n              { token: 'punctuation.begin.statement.parameters.prolog',\n                regex: '\\\\(',\n                push: \n                 [ { token: 'meta.statement.parameters.prolog',\n                     regex: '(?=\\\\))',\n                     next: 'pop' },\n                   { token: 'punctuation.separator.statement.prolog', regex: ',' },\n                   { include: '#basic_elem' },\n                   { defaultToken: 'meta.statement.parameters.prolog' } ] },\n              { defaultToken: 'meta.statement.prolog' } ] } ],\n      '#string': \n       [ { token: 'punctuation.definition.string.begin.prolog',\n           regex: '\\'',\n           push: \n            [ { token: 'punctuation.definition.string.end.prolog',\n                regex: '\\'',\n                next: 'pop' },\n              { token: 'constant.character.escape.prolog', regex: '\\\\\\\\.' },\n              { token: 'constant.character.escape.quote.prolog',\n                regex: '\\'\\'' },\n              { defaultToken: 'string.quoted.single.prolog' } ] } ],\n      '#variable': \n       [ { token: 'variable.language.anonymous.prolog',\n           regex: '\\\\b_\\\\b' },\n         { token: 'variable.other.prolog',\n           regex: '\\\\b[A-Z_][a-zA-Z0-9_]*\\\\b' } ] };\n    \n    this.normalizeRules();\n};\n\nPrologHighlightRules.metaData = { fileTypes: [ 'plg', 'prolog' ],\n      foldingStartMarker: '(%\\\\s*region \\\\w*)|([a-z]\\\\w*.*:- ?)',\n      foldingStopMarker: '(%\\\\s*end(\\\\s*region)?)|(?=\\\\.)',\n      keyEquivalent: '^~P',\n      name: 'Prolog',\n      scopeName: 'source.prolog' };\n\n\noop.inherits(PrologHighlightRules, TextHighlightRules);\n\nexports.PrologHighlightRules = PrologHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/prolog\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prolog_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PrologHighlightRules = require(\"./prolog_highlight_rules\").PrologHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PrologHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"%\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/prolog\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/prolog\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "},"lineCount":371}},"error":null,"hash":"b669c7aa24988c124d45445531dac365","cacheData":{"env":{}}}